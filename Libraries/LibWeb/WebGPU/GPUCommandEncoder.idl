#import <WebGPU/GPUObjectBase.idl>
#import <WebGPU/GPUBuffer.idl>
#import <WebGPU/GPUCommandBuffer.idl>
#import <WebGPU/GPURenderPassEncoder.idl>
#import <WebGPU/GPUTexture.idl>

// https://www.w3.org/TR/webgpu/#gputexelcopybufferlayout
dictionary GPUTexelCopyBufferLayout {
    GPUSize64 offset = 0;
    GPUSize32 bytesPerRow;
    GPUSize32 rowsPerImage;
};

// https://www.w3.org/TR/webgpu/#gputexelcopybufferinfo
dictionary GPUTexelCopyBufferInfo
         : GPUTexelCopyBufferLayout {
    required GPUBuffer buffer;
};

// https://www.w3.org/TR/webgpu/#gputexelcopytextureinfo
dictionary GPUTexelCopyTextureInfo {
    required GPUTexture texture;
    GPUIntegerCoordinate mipLevel = 0;
    GPUOrigin3D origin = {};
    GPUTextureAspect aspect = "all";
};

// https://www.w3.org/TR/webgpu/#dictdef-gpucommandencoderdescriptor
dictionary GPUCommandEncoderDescriptor
         : GPUObjectDescriptorBase {
};

// https://www.w3.org/TR/webgpu/#gpucommandencoder
[Exposed=(Window, Worker), SecureContext]
interface GPUCommandEncoder {
    GPURenderPassEncoder beginRenderPass(GPURenderPassDescriptor descriptor);

    undefined copyTextureToBuffer(
        GPUTexelCopyTextureInfo source,
        GPUTexelCopyBufferInfo destination,
        GPUExtent3D copySize);

    GPUCommandBuffer finish(optional GPUCommandBufferDescriptor descriptor = {});
};
GPUCommandEncoder includes GPUObjectBase;
